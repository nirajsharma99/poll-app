[{"G:\\poll-app\\client-side\\src\\index.js":"1","G:\\poll-app\\client-side\\src\\reportWebVitals.js":"2","G:\\poll-app\\client-side\\src\\App.js":"3","G:\\poll-app\\client-side\\src\\components\\new.js":"4","G:\\poll-app\\client-side\\src\\components\\header.js":"5","G:\\poll-app\\client-side\\src\\components\\demo-poll.js":"6","G:\\poll-app\\client-side\\src\\components\\poll-admin.js":"7","G:\\poll-app\\client-side\\src\\components\\main-component.js":"8","G:\\poll-app\\client-side\\src\\components\\poll-result.js":"9","G:\\poll-app\\client-side\\src\\components\\poll.js":"10","G:\\poll-app\\client-side\\src\\components\\test.js":"11","G:\\poll-app\\client-side\\src\\components\\edit-poll.js":"12"},{"size":449,"mtime":1610516343451,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1101,"mtime":1611208287139,"results":"16","hashOfConfig":"14"},{"size":6314,"mtime":1610469718221,"results":"17","hashOfConfig":"14"},{"size":856,"mtime":1609479918462,"results":"18","hashOfConfig":"14"},{"size":3285,"mtime":1609502191266,"results":"19","hashOfConfig":"14"},{"size":11680,"mtime":1611160501194,"results":"20","hashOfConfig":"14"},{"size":10126,"mtime":1611198986580,"results":"21","hashOfConfig":"14"},{"size":8859,"mtime":1611161083391,"results":"22","hashOfConfig":"14"},{"size":6941,"mtime":1611208299874,"results":"23","hashOfConfig":"14"},{"size":1237,"mtime":1610771949543,"results":"24","hashOfConfig":"14"},{"size":10583,"mtime":1611162829576,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1b2y798",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"G:\\poll-app\\client-side\\src\\index.js",[],["55","56"],"G:\\poll-app\\client-side\\src\\reportWebVitals.js",[],"G:\\poll-app\\client-side\\src\\App.js",[],"G:\\poll-app\\client-side\\src\\components\\new.js",["57"],"import '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nfunction New({ location }) {\r\n  const [pollId, setPollID] = useState('');\r\n  const [key, setKey] = useState('');\r\n  const [copied, setCopied] = useState({ copied: false });\r\n  const [toast, setToast] = useState({\r\n    snackbaropen: false,\r\n    Transition: Slide,\r\n  });\r\n  const snackbarclose = (event) => {\r\n    setToast({ snackbaropen: false });\r\n  };\r\n  useEffect(() => {\r\n    //const x = queryString.parse(location.search);\r\n    var x = queryString.parse(location.search);\r\n    const id = x.id;\r\n    //console.log(id);\r\n    const data = { id: id };\r\n    axios\r\n      .post('http://localhost:5000/links', data)\r\n      .then(function (response) {\r\n        //console.log(response.data);\r\n        const i = response.data.pollid;\r\n        setPollID(i);\r\n        setKey(response.data._id);\r\n        //history.push(`/new/?id=${questions.id}`);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  });\r\n  const slideTransition = (props) => {\r\n    return <Slide {...props} direction=\"down\" />;\r\n  };\r\n  const handleClick = (Transition) => () => {\r\n    setToast({ snackbaropen: true, Transition });\r\n  };\r\n  return (\r\n    <div className=\"ui-container py-5 \">\r\n      <div className=\"bg-white w-75 d-flex flex-column border border-gray mx-auto  rounded-lg shadow-lg\">\r\n        <div className=\"px-5 pt-5 pb-4 \">\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"text-primary-dark\">The link to your poll is</h5>\r\n            <div className=\"d-flex w-100\">\r\n              <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={toast.snackbaropen}\r\n                onClose={snackbarclose}\r\n                autoHideDuration={2000}\r\n                TransitionComponent={toast.Transition}\r\n                key={toast.Transition}\r\n                action={[\r\n                  <IconButton\r\n                    key=\"close\"\r\n                    arial-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    onClick={snackbarclose}\r\n                  >\r\n                    x\r\n                  </IconButton>,\r\n                ]}\r\n              >\r\n                <MuiAlert onClose={snackbarclose} severity=\"info\">\r\n                  Copied to clipboard!\r\n                </MuiAlert>\r\n              </Snackbar>\r\n              <CopyToClipboard\r\n                text={'https://localhost:3000/poll/?id=' + pollId}\r\n                onCopy={() => setCopied({ copied: true })}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"lin\"\r\n                  id=\"pollURL\"\r\n                  className=\"w-100 cursor-pointer outline-none py-2 my-3 border px-4 bg-gray-200 text-secondary rounded\"\r\n                  readOnly=\"\"\r\n                  value={'https://localhost:3000/poll/?id=' + pollId}\r\n                  onClick={handleClick(slideTransition)}\r\n                />\r\n              </CopyToClipboard>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex flex-column mt-5 py-4 border-top border-gray\">\r\n            <h5 className=\"text-primary-dark \">\r\n              The <span className=\"font-weight-bold\">admin</span> link to manage\r\n              your poll is\r\n            </h5>\r\n            <p className=\"text-sm mt-2 d-flex align-items-center text-warning py-1 font-weight-bold\">\r\n              <FontAwesomeIcon icon={faExclamationTriangle} />\r\n              &nbsp;Don't share this link with your participants\r\n            </p>\r\n            <div className=\"d-flex w-100\">\r\n              <div className=\"w-100 position-relative py-2 px-4 my-3 border rounded cursor-pointer\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"lin\"\r\n                  id=\"link\"\r\n                  className=\"w-100 bg-transparent border-0 outline-none\"\r\n                  readOnly=\"\"\r\n                  value={\r\n                    'https://localhost:3000/poll-admin/id=?' +\r\n                    pollId +\r\n                    '&key=' +\r\n                    key\r\n                  }\r\n                />\r\n                <CopyToClipboard\r\n                  text={\r\n                    'https://localhost:3000/poll-admin/id=?' +\r\n                    pollId +\r\n                    '&key=' +\r\n                    key\r\n                  }\r\n                  onCopy={() => setCopied({ copied: true })}\r\n                >\r\n                  <div\r\n                    className=\"position-absolute inset-0 text-dark text-center d-flex align-items-center justify-content-center bg-gray-200 hover-bg-gray font-weight-bold w-100 \"\r\n                    style={{ opacity: '0.9' }}\r\n                    onClick={handleClick(slideTransition)}\r\n                  >\r\n                    Click to copy\r\n                  </div>\r\n                </CopyToClipboard>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-gray-200 d-flex px-5 py-4 w-100\">\r\n          <div className=\"ml-auto d-flex align-items-center\">\r\n            <a\r\n              className=\"w-100 font-weight-bold   border-right border-gray pr-4\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href={'/poll/?id=' + pollId}\r\n            >\r\n              Visit your poll\r\n            </a>\r\n            <a\r\n              className=\"w-100 pl-4 d-flex align-items-center font-weight-bold text-nowrap\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href={'/poll-admin/?id=' + pollId + '&key=' + key}\r\n            >\r\n              Visit admin page\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default New;\r\n","G:\\poll-app\\client-side\\src\\components\\header.js",[],"G:\\poll-app\\client-side\\src\\components\\demo-poll.js",[],"G:\\poll-app\\client-side\\src\\components\\poll-admin.js",["58","59","60","61"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faLinkedin,\r\n  faTelegramPlane,\r\n  faTwitter,\r\n  faWhatsapp,\r\n} from '@fortawesome/free-brands-svg-icons';\r\nimport { faTrashAlt, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faQrcode } from '@fortawesome/free-solid-svg-icons';\r\nimport QRCode from 'qrcode.react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nfunction PollAdmin({ location }) {\r\n  const [question, setQuestion] = useState('');\r\n  const [options, setOptions] = useState([{ id: '', options: '', count: 0 }]);\r\n  const [key, setKey] = useState('');\r\n  const [pollid, setPollid] = useState('');\r\n  const [showQR, setShowQR] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  let totalvotes = 0;\r\n  options.map((x) => {\r\n    totalvotes += x.count;\r\n  });\r\n  const history = useHistory();\r\n  //console.log('total votes', totalvotes);\r\n  var cache = JSON.parse(localStorage.getItem('verifier'));\r\n  console.log(cache);\r\n  useEffect(() => {\r\n    var x = queryString.parse(location.search);\r\n    const id = x.id;\r\n    setPollid(x.id);\r\n    setKey(x.key);\r\n    //console.log(id);\r\n    axios\r\n      .get(`http://localhost:5000/getpoll/${id}`)\r\n      .then(function (response) {\r\n        let medium = [];\r\n        const data = response.data;\r\n        console.log(data);\r\n        setQuestion(data.question);\r\n        data.options.map((option) => {\r\n          medium.push(option);\r\n          return medium;\r\n        });\r\n        setOptions(medium);\r\n        //console.log('options', options);\r\n        //console.log('medium', medium);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  const deletePoll = () => {\r\n    const data = { key: key };\r\n    axios\r\n      .post('http://localhost:5000/deletepoll', data)\r\n      .then((res) => {\r\n        console.log(res);\r\n        alert('your poll was deleted');\r\n        history.push('/');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const ShowDelete = () => (\r\n    <div\r\n      className=\"w-100 justify-content-center d-flex align-items-center position-fixed fixed-top\"\r\n      style={{\r\n        height: '100%',\r\n        zIndex: 1,\r\n        backgroundColor: 'rgba(135,206,235 ,0.7)',\r\n      }}\r\n    >\r\n      <div\r\n        className=\"d-flex flex-column align-items-center bg-white rounded-lg\"\r\n        style={{ width: '30%' }}\r\n      >\r\n        <div className=\"w-100 d-flex flex-column px-4 pt-4\">\r\n          <h5>Delete Poll</h5>\r\n          <span className=\"text-secondary\">\r\n            Are you sure you want to delete the poll?\r\n          </span>\r\n          <div className=\"px-3 py-3 d-flex justify-content-end\">\r\n            <button\r\n              className=\"border-light rounded-lg shadow-lg px-4 py-2 \"\r\n              onClick={() => setShowDelete(false)}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              className=\"bg-danger border-0 rounded-lg shadow-lg text-light px-4 py-2 ml-3\"\r\n              onClick={deletePoll}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  const QR = () => (\r\n    <div\r\n      className=\"w-100 justify-content-center d-flex align-items-center position-fixed fixed-top\"\r\n      onClick={() => {\r\n        setShowQR(false);\r\n      }}\r\n      style={{\r\n        height: '100%',\r\n        zIndex: 1,\r\n        backgroundColor: 'rgba(135,206,235 ,0.7)',\r\n      }}\r\n    >\r\n      <div className=\"d-flex flex-column align-items-center bg-white\">\r\n        <span className=\"font-weight-bold \">Scan QR Code</span>\r\n        <QRCode\r\n          value={`http://localhost:3000/poll/?id=${pollid}`}\r\n          size={290}\r\n          level={'H'}\r\n          includeMargin={true}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const ShowButton = () => (\r\n    <a\r\n      className=\"bg-success text-decoration-none font-weight-bold mb-5 px-2 py-4 rounded-lg text-center text-white \"\r\n      href={'/poll/?id=' + pollid}\r\n    >\r\n      Submit your vote\r\n    </a>\r\n  );\r\n  const ShowSelection = () => (\r\n    <span className=\"bg-info text-decoration-none font-weight-bold mb-5 px-2 py-3 rounded-lg text-center text-white \">\r\n      You voted for {cache.selected}\r\n    </span>\r\n  );\r\n  return (\r\n    <div className=\"ui-outer\">\r\n      <div className=\"ui-container py-5\">\r\n        <div className=\"d-flex flex-column  flex-md-row justify-content-between align-items-md-center\">\r\n          <div className=\"d-flex flex-column mb-4 mb-md-0\">\r\n            <h2 className=\"heading-2\">Manage your poll</h2>\r\n            <p className=\"mt-4 text-secondary font-medium\">\r\n              You can only edit your poll if it has no votes!\r\n            </p>\r\n          </div>\r\n          <div className=\"d-flex align-items-center mr-4 mr-md-4 justify-content-around justify-content-md-center\">\r\n            {totalvotes === 0 ? (\r\n              <a\r\n                aria-label=\"Edit Poll?\"\r\n                href={'/edit-poll/?id=' + pollid + '&key=' + key}\r\n                className=\"text-primary-dark p-2 outline-none rounded hover-shadow text-warning border-0 bg-transparent\"\r\n              >\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </a>\r\n            ) : null}\r\n\r\n            <button\r\n              aria-label={'Delete Poll?'}\r\n              role=\"alert\"\r\n              data-balloon-pos=\"up\"\r\n              className=\"text-primary-dark p-2 outline-none rounded hover-shadow text-danger border-0 bg-transparent\"\r\n              onClick={() => setShowDelete(true)}\r\n            >\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-5 mb-md-5 pb-md-0 my-4\">\r\n          <h2 className=\" mb-5 heading\">{question}</h2>\r\n          <div className=\"d-flex flex-md-row flex-column \">\r\n            <div className=\"d-flex w-100 col-12 col-md-8 flex-column\">\r\n              <div style={{ position: 'relative' }}>\r\n                <div>\r\n                  {options.map((x, index) => (\r\n                    <div\r\n                      className=\"py-0 bg-white px-3  rounded-lg shadow-lg position-relative\"\r\n                      key={index}\r\n                    >\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <h2 className=\" font-weight-bold text-primary-dark\">\r\n                            {x.options}\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\" \">\r\n                          <h2 className=\" font-weight-bold text-primary-dark\">\r\n                            {((x.count / totalvotes) * 100).toFixed(0)}%\r\n                          </h2>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"w-100 rounded-lg \">\r\n                        <div\r\n                          className=\"rounded-lg d-block bg-success mt-3\"\r\n                          style={{\r\n                            width: `${(x.count / totalvotes) * 100}%`,\r\n                            height: '0.5rem',\r\n                          }}\r\n                        ></div>\r\n                      </div>\r\n                      <p className=\"mt-3 text-green\">{x.count} Votes</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex flex-column w-100 col-12 col-md-4 mb-0 rounded-lg \">\r\n              <a\r\n                className=\"bg-success text-decoration-none font-weight-bold mb-5 px-2 py-4 rounded-lg text-center text-white \"\r\n                href={'/poll/?id=' + pollid}\r\n              >\r\n                Submit your vote\r\n              </a>\r\n              <div className=\"w-100 bg-white d-flex flex-column border-t border-gray-300 border-top-0 rounded-lg self-start px-3 py-3 \">\r\n                <div className=\"d-flex flex-column justify-content-between\">\r\n                  <div className=\"\">\r\n                    <p className=\"font-weight-normal text-secondary text-left mb-0 text-sm lg:text-base\">\r\n                      Total Votes\r\n                    </p>\r\n                    <h3 className=\"count font-weight-bold text-primary-dark\">\r\n                      {totalvotes}\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"d-flex flex-row flex-md-column\">\r\n                    <p className=\"font-weight-bold d-none d-md-inline-block mt-2 mb-4 text-primary-secondary text-left\">\r\n                      Share\r\n                    </p>\r\n                    <button\r\n                      className=\"bg-warning font-weight-bold mb-4 px-0 py-2 rounded-lg text-center border-0 text-white mr-3 \"\r\n                      onClick={() => {\r\n                        setShowQR(true);\r\n                      }}\r\n                    >\r\n                      <FontAwesomeIcon className=\"ml-3 mr-3\" icon={faQrcode} />\r\n                      <snap className=\"d-none d-md-inline-block \">\r\n                        Share via QRcode\r\n                      </snap>\r\n                    </button>\r\n                    <a\r\n                      className=\"bg-primary text-decoration-none font-weight-bold mb-4 mr-2 py-2 rounded-lg text-center  text-white \"\r\n                      href=\"/\"\r\n                    >\r\n                      <FontAwesomeIcon className=\"ml-3 mr-3\" icon={faTwitter} />\r\n                      <snap className=\"d-none d-md-inline-block\">\r\n                        Share on Twitter\r\n                      </snap>\r\n                    </a>\r\n                    <a\r\n                      className=\"bg-success text-decoration-none font-weight-bold mb-4 mr-2 py-2 rounded-lg text-center  text-white \"\r\n                      href=\"/\"\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        className=\"ml-3 mr-3\"\r\n                        icon={faWhatsapp}\r\n                      />\r\n                      <snap className=\"d-none d-md-inline-block\">\r\n                        Share on Whatsapp\r\n                      </snap>\r\n                    </a>\r\n                    <a\r\n                      className=\"bg-info text-decoration-none font-weight-bold mb-4 mr-2 py-2 rounded-lg text-center  text-white \"\r\n                      href=\"/\"\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        className=\"ml-3 mr-3\"\r\n                        icon={faTelegramPlane}\r\n                      />\r\n                      <snap className=\"d-none d-md-inline-block\">\r\n                        Share on Telegram\r\n                      </snap>\r\n                    </a>\r\n                    <a\r\n                      className=\"bg-primary text-decoration-none font-weight-bold mb-4 mr-2 py-2 rounded-lg text-center  text-white \"\r\n                      href=\"/\"\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        className=\"ml-3 mr-3\"\r\n                        icon={faLinkedin}\r\n                      />\r\n                      <snap className=\"d-none d-md-inline-block\">\r\n                        Share on LinkedIn\r\n                      </snap>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showDelete ? <ShowDelete /> : null}\r\n      {showQR ? <QR /> : null}\r\n    </div>\r\n  );\r\n}\r\nexport default PollAdmin;\r\n","G:\\poll-app\\client-side\\src\\components\\main-component.js",[],"G:\\poll-app\\client-side\\src\\components\\poll-result.js",["62","63"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faLinkedin,\r\n  faTelegramPlane,\r\n  faTwitter,\r\n  faWhatsapp,\r\n} from '@fortawesome/free-brands-svg-icons';\r\nimport { faQrcode } from '@fortawesome/free-solid-svg-icons';\r\nimport QRCode from 'qrcode.react';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nfunction PollResult({ location }) {\r\n  const [pollid, setPollid] = useState('');\r\n  const [question, setQuestion] = useState('');\r\n  const [options, setOptions] = useState([{ id: '', options: '', count: 0 }]);\r\n  const [showQR, setShowQR] = useState(false);\r\n  let totalvotes = 0;\r\n  options.map((x) => {\r\n    totalvotes += x.count;\r\n  });\r\n\r\n  console.log('total votes', totalvotes);\r\n\r\n  var cache = JSON.parse(localStorage.getItem('verifier'));\r\n  console.log(cache);\r\n  useEffect(() => {\r\n    var x = queryString.parse(location.search);\r\n    const id = x.id;\r\n    setPollid(id);\r\n    axios\r\n      .get(`http://localhost:5000/getpoll/${id}`)\r\n      .then(function (response) {\r\n        let medium = [];\r\n        const data = response.data;\r\n        console.log(data);\r\n        setQuestion(data.question);\r\n        data.options.map((option) => {\r\n          medium.push(option);\r\n          return medium;\r\n        });\r\n        setOptions(medium);\r\n        //console.log('options', options);\r\n        //console.log('medium', medium);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const QR = () => (\r\n    <div\r\n      className=\"w-100 justify-content-center d-flex align-items-center position-fixed fixed-top\"\r\n      onClick={() => {\r\n        setShowQR(false);\r\n      }}\r\n      style={{\r\n        height: '100%',\r\n        zIndex: 1,\r\n        backgroundColor: 'rgba(135,206,235 ,0.7)',\r\n      }}\r\n    >\r\n      <div className=\"d-flex flex-column align-items-center bg-white\">\r\n        <span className=\"font-weight-bold \">Scan QR Code</span>\r\n        <QRCode\r\n          value={`http://localhost:3000/poll/?id=${pollid}`}\r\n          size={290}\r\n          level={'H'}\r\n          includeMargin={true}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n  const ShowButton = () => (\r\n    <a\r\n      className=\"bg-success text-decoration-none font-weight-bold mb-5 px-2 py-4 rounded-lg text-center text-white \"\r\n      href={'/poll/?id=' + pollid}\r\n    >\r\n      Submit your vote\r\n    </a>\r\n  );\r\n  const ShowSelection = () => (\r\n    <span className=\"bg-info text-decoration-none font-weight-bold mb-5 px-2 py-3 rounded-lg text-center text-white \">\r\n      You voted for {cache.selected}\r\n    </span>\r\n  );\r\n  return (\r\n    <div className=\"ui-outer\">\r\n      <div className=\"ui-container py-5 position-relative\">\r\n        <div className=\"mb-5 mb-md-5 pb-md-0 my-4 \">\r\n          <h2 className=\" mb-5 heading\">{question}</h2>\r\n          <div className=\"d-flex flex-column flex-md-row\">\r\n            <div className=\"d-flex w-100 col-12 col-md-8 flex-column\">\r\n              <div style={{ position: 'relative' }}>\r\n                <div>\r\n                  {options.map((x) => (\r\n                    <div\r\n                      className=\"py-0 bg-white px-3  rounded-lg shadow-lg position-relative\"\r\n                      key={x.id}\r\n                    >\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <h2 className=\" font-weight-bold text-primary-dark\">\r\n                            {x.options}\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\" \">\r\n                          <h2 className=\" font-weight-bold text-primary-dark\">\r\n                            {((x.count / totalvotes) * 100).toFixed(0)}%\r\n                          </h2>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"w-100 rounded-lg \">\r\n                        <div\r\n                          className=\"rounded-lg d-block bg-success mt-3\"\r\n                          style={{\r\n                            width: `${(x.count / totalvotes) * 100}%`,\r\n                            height: '0.5rem',\r\n                          }}\r\n                        >\r\n                          &nbsp;\r\n                        </div>\r\n                      </div>\r\n                      <p className=\"mt-3 text-green\">{x.count} Votes</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex flex-column w-100 col-12 col-md-4 mb-0 rounded-lg \">\r\n              {cache != null ? (\r\n                cache.id === pollid ? (\r\n                  <ShowSelection />\r\n                ) : (\r\n                  <ShowButton />\r\n                )\r\n              ) : (\r\n                <ShowButton />\r\n              )}\r\n              <div className=\"w-100 bg-white d-flex flex-column border-t border-gray-300 border-top-0 rounded-lg self-start px-3 py-3 \">\r\n                <a\r\n                  className=\"bg-success py-3 px-2 mt-4 d-none font-weight-bold rounded-lg text-center text-white text-nowrap  \"\r\n                  href={'/poll/?id=' + pollid}\r\n                >\r\n                  Submit your vote\r\n                </a>\r\n                <div className=\"d-flex flex-column justify-content-between\">\r\n                  <div className=\"\">\r\n                    <p className=\"font-weight-normal text-secondary text-left mb-0 text-sm lg:text-base\">\r\n                      Total Votes\r\n                    </p>\r\n                    <h3 className=\"count font-weight-bold text-primary-dark\">\r\n                      {totalvotes}\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"d-flex flex-row flex-md-column\">\r\n                    <p className=\"font-weight-bold d-none d-md-inline-block mt-2 mb-4 text-primary-secondary text-left\">\r\n                      Share\r\n                    </p>\r\n                    <button\r\n                      className=\"bg-warning font-weight-bold mb-4 px-0 py-2 rounded-lg text-center border-0 text-white mr-3 \"\r\n                      onClick={() => {\r\n                        setShowQR(true);\r\n                      }}\r\n                    >\r\n                      <FontAwesomeIcon className=\"ml-3 mr-3\" icon={faQrcode} />\r\n                      <snap className=\"d-none d-md-inline-block \">\r\n                        Share via QRcode\r\n                      </snap>\r\n                    </button>\r\n                    <a\r\n                      className=\"bg-primary text-decoration-none font-weight-bold mb-4 mr-2 py-2 rounded-lg text-center  text-white \"\r\n                      href=\"/\"\r\n                    >\r\n                      <FontAwesomeIcon className=\"ml-3 mr-3\" icon={faTwitter} />\r\n                      <snap className=\"d-none d-md-inline-block\">\r\n                        Share on Twitter\r\n                      </snap>\r\n                    </a>\r\n                    <a\r\n                      className=\"bg-success text-decoration-none font-weight-bold mb-4 mr-2 py-2 rounded-lg text-center  text-white \"\r\n                      href=\"/\"\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        className=\"ml-3 mr-3\"\r\n                        icon={faWhatsapp}\r\n                      />\r\n                      <snap className=\"d-none d-md-inline-block\">\r\n                        Share on Whatsapp\r\n                      </snap>\r\n                    </a>\r\n                    <a\r\n                      className=\"bg-info text-decoration-none font-weight-bold mb-4 mr-2 py-2 rounded-lg text-center  text-white \"\r\n                      href=\"/\"\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        className=\"ml-3 mr-3\"\r\n                        icon={faTelegramPlane}\r\n                      />\r\n                      <snap className=\"d-none d-md-inline-block\">\r\n                        Share on Telegram\r\n                      </snap>\r\n                    </a>\r\n                    <a\r\n                      className=\"bg-primary text-decoration-none font-weight-bold mb-4 mr-2 py-2 rounded-lg text-center  text-white \"\r\n                      href=\"/\"\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        className=\"ml-3 mr-3\"\r\n                        icon={faLinkedin}\r\n                      />\r\n                      <snap className=\"d-none d-md-inline-block\">\r\n                        Share on LinkedIn\r\n                      </snap>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showQR ? <QR /> : null}\r\n    </div>\r\n  );\r\n}\r\nexport default PollResult;\r\n","G:\\poll-app\\client-side\\src\\components\\poll.js",["64","65"],"G:\\poll-app\\client-side\\src\\components\\test.js",[],"G:\\poll-app\\client-side\\src\\components\\edit-poll.js",["66"],"import '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faPlus,\r\n  faBookmark,\r\n  faTrashAlt,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport queryString from 'query-string';\r\n\r\nfunction EditPoll({ location }) {\r\n  const history = useHistory();\r\n  const [pollid, setPollid] = useState('');\r\n  const [key, setKey] = useState('');\r\n  const [questions, setQuestion] = useState({\r\n    id: uuidv4(),\r\n    question: '',\r\n    error: false,\r\n  });\r\n  const [inputFields, setInputFields] = useState([\r\n    { id: uuidv4(), options: '', error: false },\r\n    { id: uuidv4(), options: '', error: false },\r\n  ]);\r\n  const [toast, setToast] = useState({\r\n    snackbaropen: false,\r\n    snackbar2open: false,\r\n    Transition: Slide,\r\n  });\r\n  useEffect(() => {\r\n    var x = queryString.parse(location.search);\r\n    const id = x.id;\r\n    setPollid(x.id);\r\n    setKey(x.key);\r\n    //console.log(id);\r\n\r\n    axios\r\n      .get(`http://localhost:5000/getpoll/${id}`)\r\n      .then(function (response) {\r\n        let medium = [];\r\n        const data = response.data;\r\n        console.log(data);\r\n        setQuestion({ question: data.question });\r\n        data.options.map((option) => {\r\n          medium.push(option);\r\n          return medium;\r\n        });\r\n        setInputFields(medium);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  const snackbarclose = (event) => {\r\n    setToast({\r\n      snackbaropen: false,\r\n      snackbar2open: false,\r\n    });\r\n  };\r\n  const showError = (value, error) => value.trim().length === 0 && error;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    //console.log('Inputfields', inputFields);\r\n    //console.log('question', questions);\r\n    const emptyQuestion = questions.question.trim().length > 0;\r\n    const emptyOptions = inputFields.every((obj) => {\r\n      return obj.options.length > 0;\r\n    });\r\n    if (!emptyQuestion) {\r\n      setQuestion({ ...questions, error: true });\r\n    }\r\n    if (!emptyOptions) {\r\n      setInputFields(\r\n        [...inputFields].map((object) => {\r\n          if (object.options === '') {\r\n            return {\r\n              ...object,\r\n              error: true,\r\n            };\r\n          } else return object;\r\n        })\r\n      );\r\n    } else {\r\n      const data = { question: questions, options: inputFields, key: key };\r\n      axios\r\n        .post('http://localhost:5000/editpoll', data)\r\n        .then(function (response) {\r\n          console.log(response.data._id);\r\n          handleClick(slideTransition);\r\n          history.push(`/poll-admin/?id=${pollid}&key=${pollid}`);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n      }\r\n      return i;\r\n    });\r\n    setInputFields(newInputFields);\r\n  };\r\n  const handleQuestion = (id, event) => {\r\n    setQuestion({ id: id, question: event.target.value });\r\n  };\r\n\r\n  const handleAddfields = () => {\r\n    setInputFields([\r\n      ...inputFields,\r\n      { id: uuidv4(), options: '', error: false },\r\n    ]);\r\n    setToast({ snackbar2open: true });\r\n  };\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.splice(\r\n      values.findIndex((value) => value.id === id),\r\n      1\r\n    );\r\n    setInputFields(values);\r\n  };\r\n  const slideTransition = (props) => {\r\n    return <Slide {...props} direction=\"down\" />;\r\n  };\r\n  const handleClick = (Transition) => () => {\r\n    setToast({ snackbaropen: true, Transition });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui-outer\">\r\n      <div className=\"ui-container py-5 px-5\">\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <div className=\"mx-auto\">\r\n            <div className=\"d-flex justify-content-between flex-column flex-md-row align-items-baseline\">\r\n              <div>\r\n                <h3>Edit Poll</h3>\r\n                <p className=\"mt-4 mb-0 text-large text-secondary font-medium\">\r\n                  Edit below fields as you need.\r\n                </p>\r\n              </div>\r\n              <Link to={'/poll-admin/?id=' + pollid + '&key=' + key}>\r\n                <span className=\"text-light bg-danger align-self-end font-weight-bold rounded-lg px-4 py-2\">\r\n                  Cancel\r\n                </span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"mt-4\">\r\n              <div className=\"flex flex-column question\">\r\n                <label className=\"mb-3 w-100 font-weight-bold content-text\">\r\n                  Poll Question\r\n                </label>\r\n                <TextField\r\n                  {...(showError(questions.question, questions.error) && {\r\n                    ...{\r\n                      error: questions.error,\r\n                      helperText: 'Enter the question.',\r\n                    },\r\n                  })}\r\n                  id={questions.id}\r\n                  name=\"question\"\r\n                  multiline={true}\r\n                  rows={3}\r\n                  className=\"textareastyle w-100 py-4 rounded-lg px-3 outline-none  border border-gray \"\r\n                  placeholder=\"What's you favorite TV Show?\"\r\n                  defaultValue={questions.question}\r\n                  onChange={(event) => handleQuestion(questions.id, event)}\r\n                />\r\n              </div>\r\n              <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={toast.snackbaropen}\r\n                onClose={snackbarclose}\r\n                autoHideDuration={2000}\r\n                TransitionComponent={toast.Transition}\r\n                key={toast.Transition}\r\n                action={[\r\n                  <IconButton\r\n                    arial-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    onClick={snackbarclose}\r\n                  >\r\n                    x\r\n                  </IconButton>,\r\n                ]}\r\n              >\r\n                <MuiAlert onClose={snackbarclose} severity=\"success\">\r\n                  Success, poll submitted!\r\n                </MuiAlert>\r\n              </Snackbar>\r\n\r\n              <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={toast.snackbar2open}\r\n                onClose={snackbarclose}\r\n                autoHideDuration={2000}\r\n                action={[\r\n                  <IconButton\r\n                    arial-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    onClick={snackbarclose}\r\n                  >\r\n                    x\r\n                  </IconButton>,\r\n                ]}\r\n              >\r\n                <MuiAlert onClose={snackbarclose} severity=\"info\">\r\n                  Added another field!\r\n                </MuiAlert>\r\n              </Snackbar>\r\n\r\n              {inputFields.map((inputField, index) => (\r\n                <div className=\"options mt-2 flex-column\" key={inputField.id}>\r\n                  <div className=\"flex align-items-center mb-3\">\r\n                    <div className=\"flex flex-column\">\r\n                      <label className=\"mb-3 w-100 content-text font-weight-bold\">\r\n                        Option {index + 1}\r\n                      </label>\r\n                      <div className=\"flex align-items-center justify-content-between\">\r\n                        <TextField\r\n                          {...(showError(\r\n                            inputField.options,\r\n                            inputField.error\r\n                          ) && {\r\n                            ...{\r\n                              error: inputField.error,\r\n                              helperText: 'Enter atleast 2 options',\r\n                            },\r\n                          })}\r\n                          id={inputField.id}\r\n                          name=\"options\"\r\n                          className=\" py-3 rounded-lg px-3 textareastyle inputfield focus-shadow transition-all duration-200 text-gray-700 focus-outline-none  border border-gray-300 focus:shadow-outline\"\r\n                          placeholder={'Option' + (index + 1)}\r\n                          value={inputField.options}\r\n                          onChange={(event) =>\r\n                            handleChangeInput(inputField.id, event)\r\n                          }\r\n                        />\r\n                        <button\r\n                          hidden={inputFields.length === 2}\r\n                          onClick={() => handleRemoveFields(inputField.id)}\r\n                          className=\" delete ml-2\"\r\n                        >\r\n                          <FontAwesomeIcon\r\n                            className=\" text-danger\"\r\n                            icon={faTrashAlt}\r\n                          />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleAddfields}\r\n                className=\"px-5 py-3 border-0  bg-dark rounded-lg font-weight-bold flex align-items-center justify-content-between text-white\"\r\n              >\r\n                <span className=\"mr-3\">\r\n                  Add another option\r\n                  <FontAwesomeIcon className=\"ml-2\" icon={faPlus} />\r\n                </span>\r\n              </button>\r\n            </div>\r\n            <div className=\"flex justify-content-center mt-5 pt-3 \">\r\n              <button\r\n                type=\"submit\"\r\n                /*onClick={handleSubmit}*/\r\n                className=\"px-5 py-3 bg-success border-0 text-white font-weight-bold rounded-lg\"\r\n              >\r\n                <FontAwesomeIcon className=\"mr-2\" icon={faBookmark} />\r\n                Save changes\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditPoll;\r\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":17,"column":10,"nodeType":"73","messageId":"74","endLine":17,"endColumn":16},{"ruleId":"75","severity":1,"message":"76","line":24,"column":19,"nodeType":"77","messageId":"78","endLine":24,"endColumn":21},{"ruleId":"79","severity":1,"message":"80","line":55,"column":6,"nodeType":"81","endLine":55,"endColumn":8,"suggestions":"82"},{"ruleId":"71","severity":1,"message":"83","line":129,"column":9,"nodeType":"73","messageId":"74","endLine":129,"endColumn":19},{"ruleId":"71","severity":1,"message":"84","line":137,"column":9,"nodeType":"73","messageId":"74","endLine":137,"endColumn":22},{"ruleId":"75","severity":1,"message":"76","line":19,"column":19,"nodeType":"77","messageId":"78","endLine":19,"endColumn":21},{"ruleId":"79","severity":1,"message":"80","line":49,"column":6,"nodeType":"81","endLine":49,"endColumn":8,"suggestions":"85"},{"ruleId":"71","severity":1,"message":"86","line":12,"column":8,"nodeType":"73","messageId":"74","endLine":12,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":70,"column":6,"nodeType":"81","endLine":70,"endColumn":8,"suggestions":"87"},{"ruleId":"79","severity":1,"message":"80","line":61,"column":6,"nodeType":"81","endLine":61,"endColumn":8,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'copied' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.","ArrayExpression",["91"],"'ShowButton' is assigned a value but never used.","'ShowSelection' is assigned a value but never used.",["92"],"'PollResult' is defined but never used.",["93"],["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"95","fix":"97"},{"desc":"95","fix":"98"},{"desc":"95","fix":"99"},"Update the dependencies array to be: [location.search]",{"range":"100","text":"101"},{"range":"102","text":"101"},{"range":"103","text":"101"},{"range":"104","text":"101"},[1823,1825],"[location.search]",[1524,1526],[2140,2142],[1894,1896]]