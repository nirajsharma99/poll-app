[{"G:\\poll-app\\client-side\\src\\index.js":"1","G:\\poll-app\\client-side\\src\\reportWebVitals.js":"2","G:\\poll-app\\client-side\\src\\App.js":"3","G:\\poll-app\\client-side\\src\\components\\new.js":"4","G:\\poll-app\\client-side\\src\\components\\header.js":"5","G:\\poll-app\\client-side\\src\\components\\demo-poll.js":"6","G:\\poll-app\\client-side\\src\\components\\poll-admin.js":"7","G:\\poll-app\\client-side\\src\\components\\main-component.js":"8","G:\\poll-app\\client-side\\src\\components\\poll-result.js":"9","G:\\poll-app\\client-side\\src\\components\\poll.js":"10"},{"size":449,"mtime":1610516343451,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":995,"mtime":1610072785183,"results":"14","hashOfConfig":"12"},{"size":6314,"mtime":1610469718221,"results":"15","hashOfConfig":"12"},{"size":856,"mtime":1609479918462,"results":"16","hashOfConfig":"12"},{"size":3285,"mtime":1609502191266,"results":"17","hashOfConfig":"12"},{"size":7691,"mtime":1610298462891,"results":"18","hashOfConfig":"12"},{"size":9349,"mtime":1610606262556,"results":"19","hashOfConfig":"12"},{"size":5832,"mtime":1610296817884,"results":"20","hashOfConfig":"12"},{"size":3925,"mtime":1610291230077,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1b2y798",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"G:\\poll-app\\client-side\\src\\index.js",[],["47","48"],"G:\\poll-app\\client-side\\src\\reportWebVitals.js",[],"G:\\poll-app\\client-side\\src\\App.js",[],"G:\\poll-app\\client-side\\src\\components\\new.js",["49"],"import '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nfunction New({ location }) {\r\n  const [pollId, setPollID] = useState('');\r\n  const [key, setKey] = useState('');\r\n  const [copied, setCopied] = useState({ copied: false });\r\n  const [toast, setToast] = useState({\r\n    snackbaropen: false,\r\n    Transition: Slide,\r\n  });\r\n  const snackbarclose = (event) => {\r\n    setToast({ snackbaropen: false });\r\n  };\r\n  useEffect(() => {\r\n    //const x = queryString.parse(location.search);\r\n    var x = queryString.parse(location.search);\r\n    const id = x.id;\r\n    //console.log(id);\r\n    const data = { id: id };\r\n    axios\r\n      .post('http://localhost:5000/links', data)\r\n      .then(function (response) {\r\n        //console.log(response.data);\r\n        const i = response.data.pollid;\r\n        setPollID(i);\r\n        setKey(response.data._id);\r\n        //history.push(`/new/?id=${questions.id}`);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  });\r\n  const slideTransition = (props) => {\r\n    return <Slide {...props} direction=\"down\" />;\r\n  };\r\n  const handleClick = (Transition) => () => {\r\n    setToast({ snackbaropen: true, Transition });\r\n  };\r\n  return (\r\n    <div className=\"ui-container py-5 \">\r\n      <div className=\"bg-white w-75 d-flex flex-column border border-gray mx-auto  rounded-lg shadow-lg\">\r\n        <div className=\"px-5 pt-5 pb-4 \">\r\n          <div className=\"d-flex flex-column\">\r\n            <h5 className=\"text-primary-dark\">The link to your poll is</h5>\r\n            <div className=\"d-flex w-100\">\r\n              <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={toast.snackbaropen}\r\n                onClose={snackbarclose}\r\n                autoHideDuration={2000}\r\n                TransitionComponent={toast.Transition}\r\n                key={toast.Transition}\r\n                action={[\r\n                  <IconButton\r\n                    key=\"close\"\r\n                    arial-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    onClick={snackbarclose}\r\n                  >\r\n                    x\r\n                  </IconButton>,\r\n                ]}\r\n              >\r\n                <MuiAlert onClose={snackbarclose} severity=\"info\">\r\n                  Copied to clipboard!\r\n                </MuiAlert>\r\n              </Snackbar>\r\n              <CopyToClipboard\r\n                text={'https://localhost:3000/poll/?id=' + pollId}\r\n                onCopy={() => setCopied({ copied: true })}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"lin\"\r\n                  id=\"pollURL\"\r\n                  className=\"w-100 cursor-pointer outline-none py-2 my-3 border px-4 bg-gray-200 text-secondary rounded\"\r\n                  readOnly=\"\"\r\n                  value={'https://localhost:3000/poll/?id=' + pollId}\r\n                  onClick={handleClick(slideTransition)}\r\n                />\r\n              </CopyToClipboard>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex flex-column mt-5 py-4 border-top border-gray\">\r\n            <h5 className=\"text-primary-dark \">\r\n              The <span className=\"font-weight-bold\">admin</span> link to manage\r\n              your poll is\r\n            </h5>\r\n            <p className=\"text-sm mt-2 d-flex align-items-center text-warning py-1 font-weight-bold\">\r\n              <FontAwesomeIcon icon={faExclamationTriangle} />\r\n              &nbsp;Don't share this link with your participants\r\n            </p>\r\n            <div className=\"d-flex w-100\">\r\n              <div className=\"w-100 position-relative py-2 px-4 my-3 border rounded cursor-pointer\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"lin\"\r\n                  id=\"link\"\r\n                  className=\"w-100 bg-transparent border-0 outline-none\"\r\n                  readOnly=\"\"\r\n                  value={\r\n                    'https://localhost:3000/poll-admin/id=?' +\r\n                    pollId +\r\n                    '&key=' +\r\n                    key\r\n                  }\r\n                />\r\n                <CopyToClipboard\r\n                  text={\r\n                    'https://localhost:3000/poll-admin/id=?' +\r\n                    pollId +\r\n                    '&key=' +\r\n                    key\r\n                  }\r\n                  onCopy={() => setCopied({ copied: true })}\r\n                >\r\n                  <div\r\n                    className=\"position-absolute inset-0 text-dark text-center d-flex align-items-center justify-content-center bg-gray-200 hover-bg-gray font-weight-bold w-100 \"\r\n                    style={{ opacity: '0.9' }}\r\n                    onClick={handleClick(slideTransition)}\r\n                  >\r\n                    Click to copy\r\n                  </div>\r\n                </CopyToClipboard>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-gray-200 d-flex px-5 py-4 w-100\">\r\n          <div className=\"ml-auto d-flex align-items-center\">\r\n            <a\r\n              className=\"w-100 font-weight-bold   border-right border-gray pr-4\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href={'/poll/?id=' + pollId}\r\n            >\r\n              Visit your poll\r\n            </a>\r\n            <a\r\n              className=\"w-100 pl-4 d-flex align-items-center font-weight-bold text-nowrap\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href={'/poll-admin/?id=' + pollId + '&key=' + key}\r\n            >\r\n              Visit admin page\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default New;\r\n","G:\\poll-app\\client-side\\src\\components\\header.js",[],"G:\\poll-app\\client-side\\src\\components\\demo-poll.js",[],"G:\\poll-app\\client-side\\src\\components\\poll-admin.js",["50","51"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faLinkedin,\r\n  faTelegramPlane,\r\n  faTwitter,\r\n  faWhatsapp,\r\n} from '@fortawesome/free-brands-svg-icons';\r\nimport { faTrashAlt, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nfunction PollAdmin({ location }) {\r\n  const [question, setQuestion] = useState('');\r\n  const [options, setOptions] = useState([{ id: '', options: '', count: 0 }]);\r\n  const [key, setKey] = useState('');\r\n  let totalvotes = 0;\r\n  options.map((x) => {\r\n    totalvotes += x.count;\r\n  });\r\n  //console.log('total votes', totalvotes);\r\n  useEffect(() => {\r\n    var x = queryString.parse(location.search);\r\n    const id = x.id;\r\n    setKey(x.key);\r\n    //console.log(id);\r\n    axios\r\n      .get(`http://localhost:5000/getpoll/${id}`)\r\n      .then(function (response) {\r\n        let medium = [];\r\n        const data = response.data;\r\n        console.log(data);\r\n        setQuestion(data.question);\r\n        data.options.map((option) => {\r\n          medium.push(option);\r\n          return medium;\r\n        });\r\n        setOptions(medium);\r\n        //console.log('options', options);\r\n        //console.log('medium', medium);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  const deletePoll = () => {\r\n    const data = { key: key };\r\n    axios\r\n      .post('http://localhost:5000/deletepoll', data)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"ui-container py-5\">\r\n        <div class=\"d-flex flex-column  flex-md-row justify-content-between align-items-md-center\">\r\n          <div class=\"d-flex flex-column mb-4 mb-md-0\">\r\n            <h2 class=\"heading-2\">Manage your poll</h2>\r\n            <p class=\"mt-4 text-secondary font-medium\">\r\n              You can only edit your poll if it has no votes!\r\n            </p>\r\n          </div>\r\n          <div class=\"d-flex align-items-center mr-4 mr-md-4 justify-content-around justify-content-md-center\">\r\n            {totalvotes === 0 ? (\r\n              <button\r\n                aria-label=\"Edit Poll?\"\r\n                data-balloon-pos=\"up\"\r\n                class=\"text-primary-dark p-2 outline-none rounded hover-shadow text-warning border-0 bg-transparent\"\r\n              >\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </button>\r\n            ) : null}\r\n\r\n            <button\r\n              aria-label=\"Delete Poll?\"\r\n              data-balloon-pos=\"up\"\r\n              class=\"text-primary-dark p-2 outline-none rounded hover-shadow text-danger border-0 bg-transparent\"\r\n              onClick={deletePoll}\r\n            >\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-5 mb-md-5 pb-md-0 my-4\">\r\n          <h2 className=\" mb-5 heading\">{question}</h2>\r\n          <div className=\"d-flex flex-md-row flex-column \">\r\n            <div className=\"d-flex w-100 col-12 col-md-8 flex-column\">\r\n              <div style={{ position: 'relative' }}>\r\n                <div>\r\n                  {options.map((x) => (\r\n                    <div className=\"py-0 bg-white px-3  rounded-lg shadow-lg position-relative\">\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <h2 className=\" font-weight-bold text-primary-dark\">\r\n                            {x.options}\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\" \">\r\n                          <h2 className=\" font-weight-bold text-primary-dark\">\r\n                            {(x.count / totalvotes) * 100}%\r\n                          </h2>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"w-100 rounded-lg \">\r\n                        <div\r\n                          className=\"rounded-lg d-block bg-success mt-3\"\r\n                          style={{\r\n                            width: `${(x.count / totalvotes) * 100}%`,\r\n                            height: '0.5rem',\r\n                          }}\r\n                        >\r\n                          &nbsp;\r\n                        </div>\r\n                      </div>\r\n                      <p className=\"mt-3 text-green\">{x.count} Votes</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex flex-column w-100 col-12 col-md-4 mb-0 rounded-lg \">\r\n              <a\r\n                className=\"bg-success text-decoration-none font-weight-bold mb-5 px-2 py-4 rounded-lg text-center text-white \"\r\n                href=\"/poll/zZc2llSqrBdWltyr3TMv\"\r\n              >\r\n                Submit your vote\r\n              </a>\r\n              <div className=\"w-100 bg-white d-flex flex-column border-t border-gray-300 border-top-0 rounded-lg self-start px-3 py-3 \">\r\n                <a\r\n                  className=\"bg-success py-3 px-2 mt-4 d-none font-weight-bold rounded-lg text-center text-white text-nowrap  \"\r\n                  href=\"/poll/zZc2llSqrBdWltyr3TMv\"\r\n                >\r\n                  Submit your vote\r\n                </a>\r\n                <div className=\"d-flex flex-column justify-content-between\">\r\n                  <div className=\"\">\r\n                    <p className=\"font-weight-normal text-secondary text-left mb-0 text-sm lg:text-base\">\r\n                      Total Votes\r\n                    </p>\r\n                    <h3 className=\"count font-weight-bold text-primary-dark\">\r\n                      {totalvotes}\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column\">\r\n                    <p className=\"font-semibold mb-2 text-primary-secondary text-left\">\r\n                      Share\r\n                    </p>\r\n                    <a\r\n                      className=\"bg-primary text-decoration-none font-weight-bold mb-4 px-0 py-2 rounded-lg text-center  text-white \"\r\n                      href=\"/\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faTwitter} />\r\n                      &nbsp;Share on Twitter\r\n                    </a>\r\n                    <a\r\n                      className=\"bg-success text-decoration-none font-weight-bold mb-4 px-0 py-2 rounded-lg text-center  text-white \"\r\n                      href=\"/\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faWhatsapp} />\r\n                      &nbsp;Share on Whatsapp\r\n                    </a>\r\n                    <a\r\n                      className=\"bg-info text-decoration-none font-weight-bold mb-4 px-0 py-2 rounded-lg text-center  text-white \"\r\n                      href=\"/\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faTelegramPlane} />\r\n                      &nbsp;Share on Telegram\r\n                    </a>\r\n                    <a\r\n                      className=\"bg-primary text-decoration-none font-weight-bold mb-4 px-0 py-2 rounded-lg text-center  text-white \"\r\n                      href=\"/\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faLinkedin} />\r\n                      &nbsp;Share on LinkedIn\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PollAdmin;\r\n","G:\\poll-app\\client-side\\src\\components\\main-component.js",["52","53","54","55"],"G:\\poll-app\\client-side\\src\\components\\poll-result.js",["56","57"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faLinkedin,\r\n  faTelegramPlane,\r\n  faTwitter,\r\n  faWhatsapp,\r\n} from '@fortawesome/free-brands-svg-icons';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nfunction PollResult({ location }) {\r\n  const [question, setQuestion] = useState('');\r\n  const [options, setOptions] = useState([{ id: '', options: '', count: 0 }]);\r\n  let totalvotes = 0;\r\n  options.map((x) => {\r\n    totalvotes += x.count;\r\n  });\r\n  console.log('total votes', totalvotes);\r\n  useEffect(() => {\r\n    var x = queryString.parse(location.search);\r\n    const id = x.id;\r\n    //console.log(id);\r\n    axios\r\n      .get(`http://localhost:5000/getpoll/${id}`)\r\n      .then(function (response) {\r\n        let medium = [];\r\n        const data = response.data;\r\n        console.log(data);\r\n        setQuestion(data.question);\r\n        data.options.map((option) => {\r\n          medium.push(option);\r\n          return medium;\r\n        });\r\n        setOptions(medium);\r\n        //console.log('options', options);\r\n        //console.log('medium', medium);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"ui-container py-5\">\r\n      <div className=\"mb-5 mb-md-5 pb-md-0 my-4\">\r\n        <h2 className=\" mb-5 heading\">{question}</h2>\r\n        <div className=\"d-flex flex-column flex-md-row\">\r\n          <div className=\"d-flex w-100 col-12 col-md-8 flex-column\">\r\n            <div style={{ position: 'relative' }}>\r\n              <div>\r\n                {options.map((x) => (\r\n                  <div className=\"py-0 bg-white px-3  rounded-lg shadow-lg position-relative\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <h2 className=\" font-weight-bold text-primary-dark\">\r\n                          {x.options}\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\" \">\r\n                        <h2 className=\" font-weight-bold text-primary-dark\">\r\n                          {(x.count / totalvotes) * 100}%\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-100 rounded-lg \">\r\n                      <div\r\n                        className=\"rounded-lg d-block bg-success mt-3\"\r\n                        style={{\r\n                          width: `${(x.count / totalvotes) * 100}%`,\r\n                          height: '0.5rem',\r\n                        }}\r\n                      >\r\n                        &nbsp;\r\n                      </div>\r\n                    </div>\r\n                    <p className=\"mt-3 text-green\">{x.count} Votes</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex flex-column w-100 col-12 col-md-4 mb-0 rounded-lg \">\r\n            <a\r\n              className=\"bg-success text-decoration-none font-weight-bold mb-5 px-2 py-4 rounded-lg text-center text-white \"\r\n              href=\"/poll/zZc2llSqrBdWltyr3TMv\"\r\n            >\r\n              Submit your vote\r\n            </a>\r\n            <div className=\"w-100 bg-white d-flex flex-column border-t border-gray-300 border-top-0 rounded-lg self-start px-3 py-3 \">\r\n              <a\r\n                className=\"bg-success py-3 px-2 mt-4 d-none font-weight-bold rounded-lg text-center text-white text-nowrap  \"\r\n                href=\"/poll/zZc2llSqrBdWltyr3TMv\"\r\n              >\r\n                Submit your vote\r\n              </a>\r\n              <div className=\"d-flex flex-column justify-content-between\">\r\n                <div className=\"\">\r\n                  <p className=\"font-weight-normal text-secondary text-left mb-0 text-sm lg:text-base\">\r\n                    Total Votes\r\n                  </p>\r\n                  <h3 className=\"count font-weight-bold text-primary-dark\">\r\n                    {totalvotes}\r\n                  </h3>\r\n                </div>\r\n                <div className=\"d-flex flex-column\">\r\n                  <p className=\"font-semibold mb-2 text-primary-secondary text-left\">\r\n                    Share\r\n                  </p>\r\n                  <a\r\n                    className=\"bg-primary text-decoration-none font-weight-bold mb-4 px-0 py-2 rounded-lg text-center  text-white \"\r\n                    href=\"/\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faTwitter} />\r\n                    &nbsp;Share on Twitter\r\n                  </a>\r\n                  <a\r\n                    className=\"bg-success text-decoration-none font-weight-bold mb-4 px-0 py-2 rounded-lg text-center  text-white \"\r\n                    href=\"/\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faWhatsapp} />\r\n                    &nbsp;Share on Whatsapp\r\n                  </a>\r\n                  <a\r\n                    className=\"bg-info text-decoration-none font-weight-bold mb-4 px-0 py-2 rounded-lg text-center  text-white \"\r\n                    href=\"/\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faTelegramPlane} />\r\n                    &nbsp;Share on Telegram\r\n                  </a>\r\n                  <a\r\n                    className=\"bg-primary text-decoration-none font-weight-bold mb-4 px-0 py-2 rounded-lg text-center  text-white \"\r\n                    href=\"/\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faLinkedin} />\r\n                    &nbsp;Share on LinkedIn\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PollResult;\r\n","G:\\poll-app\\client-side\\src\\components\\poll.js",["58"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nfunction Poll({ location }) {\r\n  const [question, setQuestion] = useState('');\r\n  const [options, setOptions] = useState([{ id: '', options: '', count: 0 }]);\r\n  const [pollid, setPollid] = useState('');\r\n  const [response, setResponse] = useState({\r\n    id: '',\r\n    options: '',\r\n    count: 0,\r\n  });\r\n  //console.log(response);\r\n\r\n  useEffect(() => {\r\n    var x = queryString.parse(location.search);\r\n    const id = x.id;\r\n    setPollid(id);\r\n    //console.log(id);\r\n    axios\r\n      .get(`http://localhost:5000/getpoll/${id}`)\r\n      .then(function (response) {\r\n        let medium = [];\r\n        const data = response.data;\r\n        console.log(data);\r\n        setQuestion(data.question);\r\n        data.options.map((option) => {\r\n          medium.push(option);\r\n          return medium;\r\n        });\r\n        setOptions(medium);\r\n        //console.log('options', options);\r\n        //console.log('medium', medium);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('newresponse', response);\r\n    axios\r\n      .post('http://localhost:5000/submitresponse', response)\r\n      .then(function (res) {\r\n        console.log(res);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui-container py-5 px-5\">\r\n      <div>\r\n        <h2 className=\" mb-5 heading\">{question}</h2>\r\n        <div className=\"flex flex-column w-75 mr-auto ml-auto\">\r\n          <form onSubmit={handleSubmit}>\r\n            {options.map((option) => (\r\n              <div\r\n                className=\"py-3 w-100 mb-4 shadow-lg hover-zoom px-2  rounded bg-white\"\r\n                key={option.id}\r\n              >\r\n                <div className=\"flex align-items-center\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    id={option.id}\r\n                    name=\"option\"\r\n                    value={option.options}\r\n                    checked={response.options === option.options}\r\n                    onChange={() =>\r\n                      setResponse({\r\n                        id: option.id,\r\n                        options: option.options,\r\n                        count: option.count + 1,\r\n                        pollid: pollid,\r\n                      })\r\n                    }\r\n                    className=\"d-inline-block ml-3 mr-3\"\r\n                  />\r\n                  <h4 className=\" font-weight-bold text-primary-dark d-inline-block\">\r\n                    {option.options}\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            <div className=\"mt-5 d-flex flex-column flex-md-row\">\r\n              <div className=\"col-0 col-md-8\">\r\n                <button\r\n                  type=\"submit\"\r\n                  onClick={handleSubmit}\r\n                  className=\"focus-outline-none py-3 font-weight-bold focus-shadow w-50 bg-success text-white px-2 shadow-lg hover-shadow-lg rounded-lg\"\r\n                >\r\n                  Submit your vote\r\n                </button>\r\n              </div>\r\n              <div className=\"col-0 col-md-4 \">\r\n                <a className=\"\" href=\"/\">\r\n                  <h5 className=\" display-8 float-right text-secondary font-weight-normal\">\r\n                    View Results <FontAwesomeIcon icon={faChevronRight} />\r\n                  </h5>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Poll;\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":17,"column":10,"nodeType":"65","messageId":"66","endLine":17,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":18,"column":19,"nodeType":"69","messageId":"70","endLine":18,"endColumn":21},{"ruleId":"71","severity":1,"message":"72","line":45,"column":6,"nodeType":"73","endLine":45,"endColumn":8,"suggestions":"74"},{"ruleId":"63","severity":1,"message":"75","line":6,"column":3,"nodeType":"65","messageId":"66","endLine":6,"endColumn":10},{"ruleId":"63","severity":1,"message":"76","line":7,"column":3,"nodeType":"65","messageId":"66","endLine":7,"endColumn":11},{"ruleId":"63","severity":1,"message":"77","line":8,"column":3,"nodeType":"65","messageId":"66","endLine":8,"endColumn":11},{"ruleId":"63","severity":1,"message":"78","line":9,"column":3,"nodeType":"65","messageId":"66","endLine":9,"endColumn":9},{"ruleId":"67","severity":1,"message":"68","line":15,"column":19,"nodeType":"69","messageId":"70","endLine":15,"endColumn":21},{"ruleId":"71","severity":1,"message":"72","line":41,"column":6,"nodeType":"73","endLine":41,"endColumn":8,"suggestions":"79"},{"ruleId":"71","severity":1,"message":"72","line":42,"column":6,"nodeType":"73","endLine":42,"endColumn":8,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'copied' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.","ArrayExpression",["83"],"'Textbox' is defined but never used.","'Radiobox' is defined but never used.","'Checkbox' is defined but never used.","'Select' is defined but never used.",["84"],["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"86","fix":"88"},{"desc":"86","fix":"89"},"Update the dependencies array to be: [location.search]",{"range":"90","text":"91"},{"range":"92","text":"91"},{"range":"93","text":"91"},[1388,1390],"[location.search]",[1248,1250],[1349,1351]]